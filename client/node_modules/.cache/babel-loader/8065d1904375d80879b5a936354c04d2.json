{"ast":null,"code":"var _jsxFileName = \"/home/kevin/fall2021/cs148/project-t03-fitnessguru/client/src/components/Workout/Split.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./Split.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Exercise from \"./Exercise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyVerticallyCenteredModal(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: props.w.workoutName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"workoutGrid\",\n      children: props.w.exercises.map(item => {\n        return /*#__PURE__*/_jsxDEV(Exercise, {\n          e: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyVerticallyCenteredModal;\n\nconst Split = ({\n  s\n}) => {\n  _s();\n\n  const [modalShow, setModalShow] = useState(false);\n  const [workout, setWorkout] = useState({\n    workoutName: \"test\",\n    exercises: []\n  });\n\n  const handleShowWorkout = ({\n    w\n  }) => {\n    console.log(\"WOKROUT: \");\n    console.log(workout);\n    setWorkout(w);\n    return setModalShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"splitCard\",\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"splitName\",\n        children: s.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"workoutCards\",\n        variant: \"flush\",\n        children: s.workouts.map(w => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleShowWorkout({\n              w\n            }),\n            children: w.workoutName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n      w: workout,\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Split, \"GEbZQVTzzVKMaHsrBd5tNk7zexA=\");\n\n_c2 = Split;\nexport default Split;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyVerticallyCenteredModal\");\n$RefreshReg$(_c2, \"Split\");","map":{"version":3,"sources":["/home/kevin/fall2021/cs148/project-t03-fitnessguru/client/src/components/Workout/Split.js"],"names":["React","useState","Card","Button","ListGroup","Modal","Exercise","MyVerticallyCenteredModal","props","w","workoutName","exercises","map","item","onHide","Split","s","modalShow","setModalShow","workout","setWorkout","handleShowWorkout","console","log","width","name","workouts"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./Split.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Exercise from \"./Exercise\";\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.w.workoutName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"workoutGrid\">\n        {props.w.exercises.map((item) => {\n          return <Exercise e={item} />;\n        })}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nconst Split = ({ s }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const [workout, setWorkout] = useState({\n    workoutName: \"test\",\n    exercises: [],\n  });\n\n  const handleShowWorkout = ({ w }) => {\n    console.log(\"WOKROUT: \");\n    console.log(workout);\n    setWorkout(w);\n    return setModalShow(true);\n  };\n\n  return (\n    <>\n      <Card className=\"splitCard\" style={{ width: \"18rem\" }}>\n        <Card.Header className=\"splitName\">{s.name}</Card.Header>\n\n        <ListGroup className=\"workoutCards\" variant=\"flush\">\n          {s.workouts.map((w) => {\n            return (\n              <Button\n                variant=\"primary\"\n                onClick={() => handleShowWorkout({ w })}\n              >\n                {w.workoutName}\n              </Button>\n            );\n          })}\n        </ListGroup>\n      </Card>\n\n      <MyVerticallyCenteredModal\n        w={workout}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n\nexport default Split;\n"]},"metadata":{},"sourceType":"module"}